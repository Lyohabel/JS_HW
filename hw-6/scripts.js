/*1. Дана строка 'aaa@bbb@ccc'. Замените все @ на ! с помощью глобального
поиска и замены. */

let str = 'aaa@bbb@ccc';

console.log (str.replace(/@/ig, "!"));

/* 2. В переменной date лежит дата в формате 2025-12-31. Преобразуйте эту
дату в формат 31/12/2025. */

let date = new Date("2025-12-31");

let opt = {
    day: 'numeric',
    month: 'numeric',
    year: 'numeric'
};

let date1 = date.toLocaleString('ru', opt);

console.log (date1); // 31.12.2025

//console.log (date1.replace(/./g, '/'));Почему-то меняет на '/' всю строку?!

date1 = date1.replace('.', '/'); // 31/12.2025

date1 = date1.replace('.', '/'); // 31/12/2025

console.log (date1);

/*ПРИМЕР ИЗ УЧЕБНИКА: let regexp = /(?<year>[0-9]{4})-(?<month>[0-9]{2})-(?<day>[0-9]{2})/g;
let str = "2019-10-30, 2020-01-01";
alert( str.replace(regexp, '$<day>.$<month>.$<year>') ); // 30.10.2019, 01.01.2020 */


/* 3. Дана строка «Я учу javascript!». Вырежете из нее слово «учу» и слово
«javascript» тремя разными способами (через substr, substring, slice). */

str = 'Я учу javascript!';

console.log (str.substring(2, 5));
console.log (str.slice(2, 5));
console.log (str.substr(2, 3));

console.log (str.substring(6));
console.log (str.slice(6));
console.log (str.substr(6));

/* 4. Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите квадратный корень
из суммы кубов его элементов. Для решения воспользуйтесь циклом for. */

let arrNum = [4, 2, 5, 19, 13, 0, 10],
sum = 0;

for (let i = 0; i < arrNum.length; i++) {
    sum += Math.pow(arrNum[i], 3);
}

let result = Math.sqrt(sum);

console.log (result);

/* 5. Даны переменные a и b. Отнимите от a переменную b и результат
присвойте переменной c. Сделайте так, чтобы в любом случае в переменную
c записалось положительное значение. Проверьте работу скрипта при a и b,
равных соответственно 3 и 5, 6 и 1. */

let a,
b,
c,
d;

d = a - b;

a = 3, b = 5;

c = Math.abs(a - b);

console.log (c);

a = 6, b = 1;

c = Math.abs(a - b);

console.log (c);

/* 6. Выведите на экран текущую дату-время в формате 12:59:59 31.12.2014.
Для решения этой задачи напишите функцию, которая будет добавлять 0
перед днями и месяцами, которые состоят из одной цифры (из 1.9.2014
сделает 01.09.2014). */

date = new Date();

console.log (date); //Mon Jan 25 2021 12:08:05 GMT+0300 (Москва, стандартное время)

let opt1 = {
    hour: 'numeric',
    minute: 'numeric',
    second: 'numeric',
    day: 'numeric',
    month: 'numeric',
    year: 'numeric'
};

date1 = date.toLocaleString('ru', opt1);

console.log (date1); // 25.01.2021, 12:13:07



/* 7. Дана строка 'aa aba abba abbba abca abea'. Напишите регулярку, которая
найдет строки aba, abba, abbba по шаблону: буква 'a', буква 'b' любое
количество раз, буква 'a'. */

str = 'aa aba abba abbba abca abea';

console.log (str.match(/ab+a/g));


/* 8. Напишите ф-цию строгой проверки ввода номер телефона в
международном формате (<код страны> <код города или сети> <номер
телефона>). Функция должна возвращать true или false. Используйте
регулярные выражения. */

let regexp = /8-10[0-9]{1,3}-[0-9]{2,3}-[0-9]{7,8}/gi;

let phone = '8-10-375-29-7456123';

console.log (regexp.test(phone)); // почему-то false


/* 9. Напишите ф-цию строгой проверки адреса эл. почты с учетом следующих условия:
- весь адрес не должен содержать русские буквы и спецсимволы, кроме одной «собачки», знака подчеркивания, дефиса и точки;
- имя эл. почты (до знака @) должно быть длиной более 2 символов, причем имя может содержать только буквы, цифры, но не быть первыми и единственными в имени;
- после последней точки и после @, домен верхнего уровня (ru, by, com и т.п.)
не может быть длиной менее 2 и более 11 символов. Функция должна возвращать true или false. Используйте регулярные выражения. */

regexp = /[a-z0-9]{3,15}@[a-z0-9].[a-z0-9]{2,11}/gi;

let email = 'tsarzverey@mail.ru';

console.log (regexp.test(email));


/* 10. Напишите ф-цию, которая из полного адреса с параметрами и без, например: https://tech.onliner.by/2018/04/26/smart-do-200/? utm_source=main_tile& utm_medium=smartdo200#zag3 , получит адрес
доменного имени (https://tech.onliner.by), остальную часть адреса без параметров (/2018/04/26/smart-do-200/), параметры
(utm_source=main_tile&utm_medium=smartdo200) и хеш (#zag3). В адресе может и не быть каких-либо составляющих. Ф-ция должна возвращать массив. */



/* * Для быстрого составления регулярного выражения и проверки исп. онлайн-
сервис https://regex101.com/. */